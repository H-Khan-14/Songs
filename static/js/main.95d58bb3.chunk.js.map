{"version":3,"sources":["components/SongList.js","actions/index.js","components/SongDetail.js","components/App.js","reducers/index.js","index.js"],"names":["SongList","this","props","songs","map","song","className","key","title","onClick","selectSong","renderList","React","Component","connect","state","type","payload","selectedSong","duration","App","combineReducers","action","ReactDOM","render","store","createStore","reducers","document","querySelector"],"mappings":"oOAIMA,E,qLACU,IAAD,OACX,OAAOC,KAAKC,MAAMC,MAAMC,KAAI,SAAAC,GAC1B,OACE,yBAAKC,UAAU,OAAOC,IAAKF,EAAKG,OAC9B,yBAAKF,UAAU,yBACb,4BACEA,UAAU,oBACVG,QAAS,kBAAM,EAAKP,MAAMQ,WAAWL,KAFvC,WAOF,yBAAKC,UAAU,WAAWD,EAAKG,a,+BAMrC,OAAO,yBAAKF,UAAU,mBAAmBL,KAAKU,kB,GAnB3BC,IAAMC,WA2BdC,eAJS,SAAAC,GACtB,MAAO,CAAEZ,MAAOY,EAAMZ,SAGgB,CACtCO,WC/BwB,SAAAL,GAExB,MAAO,CACLW,KAAM,gBACNC,QAASZ,KD0BES,CAEZd,GEVYc,eAJS,SAAAC,GACtB,MAAO,CAAEV,KAAMU,EAAMG,gBAGRJ,EApBI,SAAC,GAAc,IAAZT,EAAW,EAAXA,KACpB,OAAKA,EAIH,6BACE,4CACA,qCACUA,EAAKG,MACb,6BAFF,kBAGkBH,EAAKc,WARlB,iDCcIC,EAfH,WACV,OACE,yBAAKd,UAAU,qBACb,yBAAKA,UAAU,UACb,yBAAKA,UAAU,qBACb,kBAAC,EAAD,OAEF,yBAAKA,UAAU,qBACb,kBAAC,EAAD,UCYKe,cAAgB,CAC7BlB,MAvBmB,WACnB,MAAO,CACL,CAAEK,MAAO,YAAaW,SAAU,QAChC,CAAEX,MAAO,YAAaW,SAAU,QAChC,CAAEX,MAAO,YAAaW,SAAU,QAChC,CAAEX,MAAO,YAAaW,SAAU,QAChC,CAAEX,MAAO,UAAWW,SAAU,QAC9B,CAAEX,MAAO,SAAUW,SAAU,QAC7B,CAAEX,MAAO,eAAgBW,SAAU,QACnC,CAAEX,MAAO,QAASW,SAAU,QAC5B,CAAEX,MAAO,QAASW,SAAU,QAC5B,CAAEX,MAAO,UAAWW,SAAU,UAahCD,aAT0B,WAAkC,IAAjCA,EAAgC,uDAAjB,KAAMI,EAAW,uCAC3D,MAAoB,kBAAhBA,EAAON,KACFM,EAAOL,QAETC,KCdTK,IAASC,OACP,kBAAC,IAAD,CAAUC,MAAOC,YAAYC,IAC3B,kBAAC,EAAD,OAEFC,SAASC,cAAc,Y","file":"static/js/main.95d58bb3.chunk.js","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { selectSong } from '../actions';\n\nclass SongList extends React.Component {\n  renderList() {\n    return this.props.songs.map(song => {\n      return (\n        <div className=\"item\" key={song.title}>\n          <div className=\"right floated content\">\n            <button\n              className=\"ui button primary\"\n              onClick={() => this.props.selectSong(song)}\n            >\n              Select\n            </button>\n          </div>\n          <div className=\"content\">{song.title}</div>\n        </div>\n      );\n    });\n  }\n  render() {\n    return <div className=\"ui divided list\">{this.renderList()}</div>;\n  }\n}\n\nconst mapStateToProps = state => {\n  return { songs: state.songs };\n};\n\nexport default connect(mapStateToProps, {\n  selectSong\n})(SongList);\n","//Action Creator\nexport const selectSong = song => {\n  //Return an action\n  return {\n    type: 'SONG_SELECTED',\n    payload: song\n  };\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nconst SongDetail = ({ song }) => {\n  if (!song) {\n    return <div>Select a Song</div>;\n  }\n  return (\n    <div>\n      <h3>Details For:</h3>\n      <p>\n        Title: {song.title}\n        <br />\n        Song Duration: {song.duration}\n      </p>\n    </div>\n  );\n};\n\nconst mapToStateProps = state => {\n  return { song: state.selectedSong };\n};\n\nexport default connect(mapToStateProps)(SongDetail);\n","import React from 'react';\nimport SongList from './SongList';\nimport SongDetail from './SongDetail';\n\nconst App = () => {\n  return (\n    <div className=\"ui container grid\">\n      <div className=\"ui row\">\n        <div className=\"column eight wide\">\n          <SongList />\n        </div>\n        <div className=\"column eight wide\">\n          <SongDetail />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import { combineReducers } from 'redux';\n\nconst songsReducer = () => {\n  return [\n    { title: 'All Of Me', duration: '4:05' },\n    { title: 'Rather Be', duration: '2:15' },\n    { title: 'Let it Go', duration: '5:12' },\n    { title: 'One Dance', duration: '2:34' },\n    { title: 'Lean On', duration: '3:45' },\n    { title: 'Closer', duration: '3:21' },\n    { title: 'Shake It Off', duration: '4:32' },\n    { title: 'Ghost', duration: '2:34' },\n    { title: 'Sorry', duration: '5:31' },\n    { title: 'Perfect', duration: '3:45' }\n  ];\n};\n\nconst selectedSongReducer = (selectedSong = null, action) => {\n  if (action.type === 'SONG_SELECTED') {\n    return action.payload;\n  }\n  return selectedSong;\n};\n\nexport default combineReducers({\n  songs: songsReducer,\n  selectedSong: selectedSongReducer\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport App from './components/App';\nimport reducers from './reducers';\n\nReactDOM.render(\n  <Provider store={createStore(reducers)}>\n    <App />\n  </Provider>,\n  document.querySelector('#root')\n);\n"],"sourceRoot":""}